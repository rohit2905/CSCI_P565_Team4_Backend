# This is a basic workflow to help you get started with Actions
name: CI-CD

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
        working-directory: server/
      # build and test the apps
      - name: build
        run: |
          npm run build
        working-directory: server/
      - name: 'Create env file'
        run: |
          touch .env
          echo MONGO_URI_TEST=mongodb+srv://${{ secrets.dbname }}:${{ secrets.dbpass }}@deliverwise.ycjpjzr.mongodb.net/utest?retryWrites=true&w=majority >> .env
        working-directory: server/
      - name: test
        run: |
          npm run test
        working-directory: server/
  push_to_Docker_Hub:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
    - name: Build and push Docker image
      env:
        IMAGE_TAG: ${{ format('{0}', github.run_number) }}
      run: |
        docker build . --file Dockerfile --tag rohitgoud9/deliverwise-backend:${IMAGE_TAG}
        docker push rohitgoud9/deliverwise-backend:${IMAGE_TAG}
  push_to_render:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
          wait-for-success: true
